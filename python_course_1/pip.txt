***INSTALACIÓN DE DEPENDENCIAS CON PIP***

Pip (package installer for python) Nos permite descargar paquetes de terceros para utilizarlos en nuestro environment, además se puede definir una versión especifica del paquete.

- pip install <paquete>: instala el paquete que se especifique(pandas,  matplotlib, bokeh, etc) 

- pip freeze: muestra todos los paquetes instalados en tu ambiente virtual

Si quisiéramos que alguien mas pueda ejecutar nuestro proyecto es importante compartir qué librería y versión hemos empleado, eso se realiza con el comando:

- pip freeze > requirements.txt

El resultado de pip freeze se escribe en requirements.txt (se pueden usar otros nombres pero el mostrado es una buena práctica)

Para instalar paquetes desde un archivo como requirements.txt ejecutamos:

- pip install -r requirements.txt 


Básicamente, pip es como el npm de JavaScript, y el archivo requeriments.txt es como el package.json de JavaScript.

Es importante recordar que esto se debe correr con el entorno virtual activado (avenv), de esta manera todas las dependencias que instalemos se guardaran para este entorno virtual (de lo contrario se guardarían de manera global, que es justo lo que no queremos).

Algo importante, si estás manejando git, es bueno siempre ignorar la carpeta venv, esto porque realmente no nos importa subir todo eso al repositorio, puedes mirarlo como que venv es el node_modules de JavaScript, a fin de cuentas, cualquier otro programador que trabaje con nuestro código creará su propio entorno virtual e instalará las dependencias que dejamos en nuestro requeriments.txt.

Y un dato curioso es que, el operador > en la terminal es algo especial de UNIX, ya que este operador lo que hace es redirigir la salida de cualquier comando hacia donde lo mandes, por defecto la salida es en la terminal, pero al usar > se le dijo a la terminal que, en lugar de que la salida sea en la terminal, que se redirija al archivo requeriments.txt 👀. Si quieres jugar con ello, puedes hacerlo con este ejemplo: ls -al > test.txt, eso creará un archivo llamado test.txt, y si lo abres verás cómo es que ese comando funciona 😄.


*MÓDULOS POPULARES*

-Request, BeautifulSoup4, Pandas, Numpy, Pytest